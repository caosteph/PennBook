<!DOCTYPE html>
<html>
<head>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
  <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>
  <link rel="stylesheet" href="/wall.css">
  <link rel="stylesheet" href="/home.css">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta charset="UTF-8" />
    <meta name="viewport" content=
        "width=device-width, initial-scale=1.0" />
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js">
    </script>
      
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-3-typeahead/4.0.2/bootstrap3-typeahead.min.js">
    </script>
      
    <script>
    
    let getPosts = function() {
                $.getJSON("/posts", function(data, err) {
                    if (data) {
                        let counter = 1;
                        data.forEach((post) => {
                            let poster = post.creator_username.S;
                            let poster_name = post.creator_name.S;
                            let type = post.type.S;
                            let initials = (poster_name.split(" ")[0]).charAt(0) + poster_name.split(" ")[1].charAt(0);
                            let date = new Date(post.time.S);
                            let elapsed_time = Date.now() - date;
                            
                            let time_text = "0";

                            if (elapsed_time < 86400000) {
                                let hours = Math.floor((elapsed_time / 1000) / 3600);
                                let minutes = Math.floor((elapsed_time / 1000) / 60);
                                if (hours > 0) {
                                    time_text = hours.toString() + "h ago"
                                } else {
                                    time_text = minutes.toString() + "min ago"
                                }
                            } else {
                                let month = date.getMonth();
                                let day = date.getDate();
                                let year = date.getFullYear();
                                let hour = date.getHours();
                                let min = date.getMinutes();
                                if (year != new Date(Date.now()).getFullYear()) {
                                    time_text = month + "/" + day + "/" + year;
                                } else {
                                    time_text = month + "/" + day + " " + hour + ":" + min;
                                }
                            }

                            let id = "post" + counter.toString();
                            postList.push(post.post_id.S);
                            let postContainer = $("#" + id);

                            let header = $("#" + id + " .post-head-text");
                            if (type == "text-own" || type == "media-own") {
                                header.text(poster_name);
                            } else if (type == "friend") {
                                header.text(poster_name + " is now friends with " + post.friend_name.S + ".");
                            } else if (type == "text-friend" || type == "media-friend") {
                                $("#" + id + " .post-head-row").append(
                                    poster_name +
                                    " <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='currentColor' class='bi bi-caret-right-fill' viewBox='0 0 16 16'> "
                                    + "<path d='m12.14 8.753-5.482 4.796c-.646.566-1.658.106-1.658-.753V3.204a1 1 0 0 1 1.659-.753l5.48 4.796a1 1 0 0 1 0 1.506z'/>"
                                    + "</svg>"
                                    + post.wall_name.S
                                )
                            }
                            header.attr("href", "/" + poster);
                            
                            $("#" + id + " .poster-profile-initials").text(initials);
                            $("#" + id + " .card-text").text(post.text.S);
                            $("#" + id + " .time").text(time_text);
                            $("#" + id + " .comment-button").attr("id", post.post_id.S);
                            $("#" + id + " .like-button").attr("id", post.post_id.S);
                            $("#" + id + " .comment-input").attr("id", post.post_id.S);

                            let commentsContainer = $("#" + id + " .comments-container");
                            commentsContainer.attr("id", post.post_id.S);
                            $("#" + id + " .card").attr("id", post.post_id.S);

                            //DISPLAYING COMMENTS
                            $.getJSON("/comments/" + post.post_id.S, function(data, err) {
                                if (data) {
                                    if (data.length == 1) {
                                        $("#" + id + " .num-comments").text("1 Comment");    
                                    } else {
                                        $("#" + id + " .num-comments").text(data.length + " Comments");
                                    }
                                    let htmlStuff = "";
                                    data.forEach((comment) => {
                                        commentsContainer.append(
                                            "<div class='comment'>"
                                            + "<div class='commenter-profile'></div>"
                                            + "<div class='comment-body'>"
                                            + "<div class='commenter'>" + comment.commenter_name + "</div>"
                                            + "<div class='comment-text'>" + comment.text + "</div>"
                                            + "</div>"
                                            + "</div>"
                                        );
                                    })
                                } else {
                                    $("#" + id + " .num-comments").text("0 Comments");
                                }
                            })

                            $.getJSON("/likes/likes/" + postID, function(data, err) {
                                if (data.likes) {
                                    if (data.likes.length == 1) {
                                        $("#" + postID + " .num-likes").text("1 Like");
                                    } else {
                                        $("#" + postID + " .num-likes").text(data.likes.length + " Likes");
                                    }
                                } else {
                                    $("#" + postID + " .num-likes").text("0 Likes");
                                }

                                if (data.liked) {
                                    $("#" + postID + " .like-button").css("background-color", "#1DB954");
                                }
                            });

                            counter++;
                        })
                    } else {
                        console.log(err);
                    }
                })
            }
            var getFormattedTime = function(t) {
                let date = new Date(t);
                let elapsed_time = Date.now() - date;
                let time_text = "0";

                if (elapsed_time < 86400000) {
                    let hours = Math.floor((elapsed_time / 1000) / 3600);
                    let minutes = Math.floor((elapsed_time / 1000) / 60);
                    if (hours > 0) {
                        time_text = hours.toString() + "h ago"
                    } else {
                        time_text = minutes.toString() + "min ago"
                    }
                } else {
                    let month = date.getMonth();
                    let day = date.getDate();
                    let year = date.getFullYear();
                    let hour = date.getHours();
                    let min = date.getMinutes();
                    if (year != new Date(Date.now()).getFullYear()) {
                        time_text = month + "/" + day + "/" + year;
                    } else {
                        if (parseInt(min) < 10) {
                            min = "0" + min;
                        }
                        time_text = month + "/" + day + " " + hour + ":" + min;
                    }
                }
                return time_text;
            }

            var loadPosts = function() {
                console.log("ABOUT TO LOAD POSTS");
                let feedContainer = $(".feed-container");
                var postList = [];
                var user = $("#jumbo-username").text();
                var formData = {"username": user};
                console.log(formData);
                $.post("/getWall", formData, function(data) {
                    if (data) {
                        console.log("LOOPING THROUGH POSTS");
                        console.log(data);
                        var prevPost = {};
                        data.forEach((post) => {
                            
                            // if (post == prevPost) {
                            //   console.log("SAME POST");
                            // }
                            console.log(post);
                            let poster = post.creator_username;
                            console.log(poster);
                            let poster_name = post.creator_name;
                            //let media = "'" + post.media + "'";
                            let media = post.media;
                            console.log("media is: " + media);
                            //console.log(poster_name);
                            let type = post.type;
                            console.log(type);
                            let postID = post.post_id;
                            if ($("#" + postID + ".post-container").length > 0) {
                              return;
                            }
                            let initials = (poster_name.split(" ")[0]).charAt(0) + poster_name.split(" ")[1].charAt(0);
                            let date = new Date(post.time);
                            let elapsed_time = Date.now() - date;
                            
                            let time_text = "0";

                            if (elapsed_time < 86400000) {
                                let hours = Math.floor((elapsed_time / 1000) / 3600);
                                let minutes = Math.floor((elapsed_time / 1000) / 60);
                                if (hours > 0) {
                                    time_text = hours.toString() + "h ago"
                                } else {
                                    time_text = minutes.toString() + "min ago"
                                }
                            } else {
                                let month = date.getMonth();
                                let day = date.getDate();
                                let year = date.getFullYear();
                                let hour = date.getHours();
                                let min = date.getMinutes();
                                if (year != new Date(Date.now()).getFullYear()) {
                                    time_text = month + "/" + day + "/" + year;
                                } else {
                                    time_text = month + "/" + day + " " + hour + ":" + min;
                                }
                            }
                            
                            postList.push(postID);

                            feedContainer.prepend(
                                "<div class='post-container' id='" + postID + "'>" 
                                    + "<div class='card'>" 
                                        + "<div class='post-header'>" 
                                            + "<div class='poster-profile'>" 
                                                + "<a class='poster-profile'>"
                                                    + "<div class='poster-profile-circle'>" 
                                                        + "<div class='poster-profile-initials'>INITIALS HERE</div>" 
                                                    + "</div>" 
                                                + "</a>"
                                            + "</div>" 
                                            + "<div class='post-head-text'>" 
                                                + "<div class='post-head-row'></div>" 
                                            + "</div>" 
                                            + "<div class='time'>TIME HERE</div>"  
                                            + "</div>" 
                                        + "<div class='card-body'>" +
                                          "<img id = 'postimg"+ postID + "' src = '" + media + "' class='center'>" 
                                            + "<div class='card-text'>TEXT HERE</div>" 
                                        + "</div>" 
                                        + "<ul class='list-group list-group-flush'>" 
                                            + "<li class='list-group-item'>" 
                                                + "<div class='post-info'>" 
                                                    + "<div class='likes'>" 
                                                        + "<svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='currentColor' class='bi bi-hand-thumbs-up icon' viewBox='0 0 16 16'>" 
                                                            + "<path d='M8.864.046C7.908-.193 7.02.53 6.956 1.466c-.072 1.051-.23 2.016-.428 2.59-.125.36-.479 1.013-1.04 1.639-.557.623-1.282 1.178-2.131 1.41C2.685 7.288 2 7.87 2 8.72v4.001c0 .845.682 1.464 1.448 1.545 1.07.114 1.564.415 2.068.723l.048.03c.272.165.578.348.97.484.397.136.861.217 1.466.217h3.5c.937 0 1.599-.477 1.934-1.064a1.86 1.86 0 0 0 .254-.912c0-.152-.023-.312-.077-.464.201-.263.38-.578.488-.901.11-.33.172-.762.004-1.149.069-.13.12-.269.159-.403.077-.27.113-.568.113-.857 0-.288-.036-.585-.113-.856a2.144 2.144 0 0 0-.138-.362 1.9 1.9 0 0 0 .234-1.734c-.206-.592-.682-1.1-1.2-1.272-.847-.282-1.803-.276-2.516-.211a9.84 9.84 0 0 0-.443.05 9.365 9.365 0 0 0-.062-4.509A1.38 1.38 0 0 0 9.125.111L8.864.046zM11.5 14.721H8c-.51 0-.863-.069-1.14-.164-.281-.097-.506-.228-.776-.393l-.04-.024c-.555-.339-1.198-.731-2.49-.868-.333-.036-.554-.29-.554-.55V8.72c0-.254.226-.543.62-.65 1.095-.3 1.977-.996 2.614-1.708.635-.71 1.064-1.475 1.238-1.978.243-.7.407-1.768.482-2.85.025-.362.36-.594.667-.518l.262.066c.16.04.258.143.288.255a8.34 8.34 0 0 1-.145 4.725.5.5 0 0 0 .595.644l.003-.001.014-.003.058-.014a8.908 8.908 0 0 1 1.036-.157c.663-.06 1.457-.054 2.11.164.175.058.45.3.57.65.107.308.087.67-.266 1.022l-.353.353.353.354c.043.043.105.141.154.315.048.167.075.37.075.581 0 .212-.027.414-.075.582-.05.174-.111.272-.154.315l-.353.353.353.354c.047.047.109.177.005.488a2.224 2.224 0 0 1-.505.805l-.353.353.353.354c.006.005.041.05.041.17a.866.866 0 0 1-.121.416c-.165.288-.503.56-1.066.56z'/>" 
                                                        + "</svg>" 
                                                        + "<div class='num-likes'>likes</div>" 
                                                    + "</div>" 
                                                    + "<div class='comments'>" 
                                                      + "<svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='currentColor' class='bi bi-chat-right icon' viewBox='0 0 16 16'>" 
                                                          + "<path d='M2 1a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h9.586a2 2 0 0 1 1.414.586l2 2V2a1 1 0 0 0-1-1H2zm12-1a2 2 0 0 1 2 2v12.793a.5.5 0 0 1-.854.353l-2.853-2.853a1 1 0 0 0-.707-.293H2a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2h12z'/>" 
                                                      + "</svg>" 
                                                      + "<div class='num-comments'>comments" + 
                                                  + "</div></div>" 
                                                + "</div></div></div>" 
                                                + "<div class='engagement-buttons'>" 
                                                    + "<button class='btn like-button'>Like</button>" 
                                                    + "<button class='btn comment-button focus-comment'>Comment</button>" 
                                                + "</div>" 
                                            + "</li>" 
                                            + "<li class='list-group-item'>" 
                                                + "Comments" 
                                                + "<div class='comments-container'></div>" 
                                                + "<div class='comment-input-container'>" 
                                                    + "<input type='text' class='form-control comment-input' placeholder='Write a comment...'>" 
                                                    + "<button class='btn comment-button post-comment'>Comment</button>" 
                                                + "</div>" 
                                            + "</li>" 
                                        + "</ul>" 
                                    + "</div>" 
                                + "</div>"
                            );

                            let postContainer = $("#" + postID + " .post-container");

                            //Handling text of post header
                            let header = $("#" + postID + " .post-head-text");
                            if (type == "text-own" || type == "media-own") {
                                header.text(poster_name);
                            } else if (type == "status") {
                              header.text(poster_name + " has a new status update.");
                            } else if (type == "text-friend" || type == "media-friend") {
                                $("#" + postID + " .post-head-row").append(
                                    poster_name +
                                    " <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='currentColor' class='bi bi-caret-right-fill' viewBox='0 0 16 16'> "
                                    + "<path d='m12.14 8.753-5.482 4.796c-.646.566-1.658.106-1.658-.753V3.204a1 1 0 0 1 1.659-.753l5.48 4.796a1 1 0 0 1 0 1.506z'/>"
                                    + "</svg>"
                                    + post.wall_name
                                )
                            }

                            $("#" + postID + " .poster-profile-initials").text(initials);
                            $("#" + postID + " .card-text").text(post.text);
                            $("#" + postID + " .time").text(time_text);
                            $("#" + postID + " .comment-button").attr("id", postID);
                            $("#" + postID + " .like-button").attr("id", postID);
                            $("#" + postID + " .comment-input").attr("id", postID);

                            formData = {id: postID};


                            let commentsContainer = $("#" + postID + " .comments-container");
                            commentsContainer.attr("id", postID);
                            $("#" + postID + " .card").attr("id", postID);

                            //Link to poster's wall
                            $("a.poster-profile").attr("href", "/wall/" + poster);

                            //DISPLAYING COMMENTS
                            $.getJSON("/comments/" + postID, function(data, err) {
                                if (data) {
                                    if (data.length == 1) {
                                        $("#" + postID + " .num-comments").text("1 Comment");    
                                    } else {
                                        $("#" + postID + " .num-comments").text(data.length + " Comments");
                                    }
                                    data.forEach((comment) => {
                                      //Retrieving profile picture of commenter
                                      $.getJSON("/profilePicture/" + comment.commenter_username, function(data, err) {
                                          let imageURL = data;
                                          commentsContainer.append(
                                              "<div class='comment' id='" + comment.time + "'>"
                                              + "<div class='commenter-profile'>" 
                                                  + "<img class='commenter-profile' src='" + imageURL + "'>" 
                                              + "</div>"
                                              + "<div class='comment-body'>"
                                              + "<div class='commenter'>" 
                                                  + "<a class='commenter' href='/wall/" + comment.commenter_username + "'>"
                                                  + comment.commenter_name 
                                                  + "</a>"
                                                  + "   " + getFormattedTime(comment.time) 
                                              + "</div>"
                                              + "<div class='comment-text'>" + comment.text + "</div>"
                                              + "</div>"
                                              + "</div>"
                                          );
                                          cList.push(comment.time);
                                        });
                                    })
                                } else {
                                    $("#" + postID + " .num-comments").text("0 Comments");
                                }
                            })

                            //newlikes

                            $.getJSON("/likes/likes/" + postID, function(data, err) {
                              console.log("inside getjson");
                              if (data.likes) {
                                  if (data.likes.length == 1) {
                                      $("#" + postID + " .num-likes").text("1 Like");
                                  } else {
                                      $("#" + postID + " .num-likes").text(data.likes.length + " Likes");
                                      console.log(post.text);
                                      console.log("num likes "  + data.likes.length);
                                  }
                              } else {
                                  $("#" + postID + " .num-likes").text("0 Likes");
                              }

                              if (data.liked) {
                                  $("#" + postID + " .like-button").css("background-color", "#1DB954");
                              }
                            });
                            prevPost = post;
                        })

                        //BUTTON LISTENERS
                        $(".focus-comment").click(function() {
                                let postID = this.id;
                                $("#" + postID + " .comment-input").focus();
                            })

                            $(".post-comment").click(function() {
                                let d = new Date();
                                let t = d.toISOString();
                                let text = $(this).prev().val();
                                let id = this.id;

                                if (text) {
                                    $.post("/comment", {
                                        post_id: id,
                                        time: t, 
                                        text: text
                                    }, function(data, textStatus, jqXHR) {
                                        let name = data;
                                        $.getJSON("/check", function(data, err) {
                                            if (data) {
                                                $.getJSON("/profilePicture/" + data, function(data, err) {
                                                    let imageURL = data;
                                                    $("#" + id + " .comments-container").append(
                                                        "<div class='comment' id='" + t + "'>"
                                                        + "<div class='commenter-profile'>" 
                                                            + "<img class='commenter-profile' src='" + imageURL + "'>" 
                                                        + "</div>"
                                                        + "<div class='comment-body'>"
                                                        + "<div class='commenter'>" + name + " " + getFormattedTime(t) + "</div>"
                                                        + "<div class='comment-text'>" + text + "</div>"
                                                        + "</div>"
                                                        + "</div>"
                                                    );

                                                    let currentCount = $("#" + postID + " .num-comments").text().split(" ");
                                                    let newCount = (parseInt(currentCount) + 1).toString();
                                                    let newText = newCount + " Comments";
                                                    $("#" + postID + " .num-comments").text(newText);   

                                                    $("#" + id + " .comments-container").focus();
                                                });
                                            }
                                        });
                                    });

                                    $(this).prev().val("");
                                } else {
                                    alert("Invalid input for comment.");
                                }

                                
                            })

                            $(".like-button").click(function() {
                                let postID = this.id;
                                $.post("/like", { post_id: this.id, table: "likes" }, function(data, textStatus, jqXHR) {
                                    let prev = $("#" + postID + " .num-likes").text();
                                    let numLikes = parseInt(prev.split(" ")[0]);
                                    if (data == "deleted") {
                                        numLikes--;
                                        $("#" + postID + " .like-button").css("background-color", "white");
                                    } else {
                                        numLikes++;
                                        $("#" + postID + " .like-button").css("background-color", "#1DB954");
                                    }

                                    let newText = numLikes.toString() + " Likes";
                                    if (numLikes == 1) {
                                        let newText = numLikes.toString() + " Like";                                
                                    }
                                    $("#" + postID + " .num-likes").text(newText);
                                })
                            });
                    }
                });
            }


    var loadUser = function() {
        var user = $('#jumbo-username').text();
        var formData = {
            username: user
        }
        console.log(formData);
        console.log("about to post to otheruser");
        $.post('/otherUserInfo', formData, function(d) {
            $('#search-input').val('');
            var data = d.data;
            var name = data.firstName.S + " " + data.lastName.S;
            var topics = "";
            var topicsList = [];
            for (let i = 0; i < data.topics.L.length; i++){
                if (i == data.topics.L.length - 1){
                    topics = topics + data.topics.L[i].S;
                } else {
                    topics = topics + data.topics.L[i].S + ", ";
                }
                topicsList.push(data.topics.L[i].S);
            }
            var birthday = data.birthday.S;
            var affiliation = data.affiliation.S;
            var initials = data.firstName.S[0] + data.lastName.S[0];
            $(".profile-pic").attr('src', d.image);
            $('#jumbo-name').text(name);
            $('#jumbo-birthday').text("Birthday: " + birthday);
            $('#jumbo-affiliation').text("Affiliation: "+ affiliation);
            $('#jumbo-topics').text(topicsList.join(', '));
      });
    }

    var checkFriend = function() {
            var friend2 = $('#jumbo-username').text();
            var formData = {friend2: friend2};
            console.log("about to check friend");
            console.log(formData);
            $.post('/checkFriend', formData, function(data){
                console.log("Data:");
                console.log(data);
                    if (data.value == true){
                        console.log("data is true");
                        $("#addFriend").css('visibility', 'hidden');
                        loadPosts();
                        
                    // } else if (data.value == false) {
                    } else {
                        console.log("data is false");
                        console.log(data.value);
                        $(".friend-request").append(
                            "<button type='button' class='btn btn-outline-success add-friend btn-sm' id = 'addFriend'>Add Friend</button>"
                        );
                        $('.add-friend').click(function () {
                            var friend2 = $('#jumbo-username').text();
                            var friend2Name = $('#jumbo-name').text();
                            var formData = {"friend2": friend2, "friend2Name": friend2Name};
                            $.post('/requestFriend', formData, function(data){});
                            $('#addFriend.add-friend').css("background-color", "#1DB954");
                        });
                        // });
                    } 
                });
            };

    var loadProfilePicture = function() {
      $.getJSON("/check", function(data, err) {
            console.log("Username is: " + data);
            if (data) {
                var formData = {"username": data};
                $.getJSON("/profilePicture/" + data, function(data, err) {
                    let imageURL = data;
                    $(".profile-button").css("background-image", "url('" + imageURL + "')");
                });
            
            }
            

        })
    }
    $(document).ready(function(){
                loadUser();
                loadProfilePicture();
                checkFriend();

                $(".feed-container").scroll( function() {
                    var scrollHeight = $(document).height();
                    var scrollPos = $(window).height() + $(".feed-container").scrollTop();

                    if ((scrollHeight - scrollPos) / scrollHeight == 0) {
                        console.log("bottom!");
                    }
                });


          $(".search-user").on("submit", function(){
            
            event.preventDefault();
            console.log("submitted");
            //console.log($('#search-input').val());
            var name = $('#search-input').val();
            $.post('/userList', function(data){
              if (!data.includes(name)){
                alert("User not found");
              }
            });
            var formData = {
              name: name
            };
            console.log(formData);
            $.post('/getUsername', formData, function(data){
                    console.log("inside update post");
                    console.log(data);
                    window.location.href = "/wall/" + data;
              });
        });
        
    });
  </script>
</head>

<body>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
<nav class="navbar navbar-expand-lg navbar-light bg-light sticky-top" id="navbar">
    <div class="container-fluid">
      <a class="navbar-brand" href="/home">PennBook</a>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarSupportedContent">
        <ul class="navbar-nav me-auto mb-2 mb-lg-0">
  
          <li class="nav-item">
              <a class="nav-link active" aria-current="page" href="/newsfeed">Newsfeed</a>
          </li>
        </ul>
        <form class="d-flex search-user">
          <input class="form-control me-2 typeahead" id = "search-input" data-provide="typeahead" type="text" placeholder="Search People" aria-label="Search">
          <button class="btn btn-outline-success search-user-btn" type="submit">Search</button>
        </form>
        <ul></ul>
        <div class="dropdown">
          <button class="btn btn-circle border border-success profile-button" type="button" id="navbar-icon" data-bs-toggle="dropdown" aria-expanded="false">
          </button>
          <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="dropdownMenuButton1">
            <li><a class="dropdown-item" href="/wall">Wall</a></li>
            <li><a class="dropdown-item" href="/visualizer">Visualizer</a></li>
            <li><hr class="dropdown-divider"></li>
            <li><a class="dropdown-item" href="/logout">Logout</a></li>
          </ul>
        </div>
      </div>
    </div>
  </nav>
<script>
  $.post('/userList', function(data){
            console.log(data);
            var $type = $(".typeahead");
            $type.typeahead({
              source: data,
              autoSelect: true,
          });
  });
    
</script>

<div class="jumbotron m-3 position-relative">
    <div class="row">
        <div class ="col-4 ">
            <div class ="row-3">
            <img class="profile-pic center" width="200" height="40" 
                src="https://mastodon.sdf.org/system/accounts/avatars/000/108/313/original/035ab20c290d3722.png">
            <ul></ul>
            <p class="lead" id="jumbo-username" hidden><%=username%></p>
            </div>
            <div class ="row bottom">
            </div>
        </div>
        <div class ="col-6 align-bottom">
            <h4 class="display-6" id="jumbo-name"></h4>
            <ul></ul>
            <p class="lead" id="jumbo-birthday"></p>
            <p class="lead" id="jumbo-affiliation"></p>
            <p class = "lead">Interested in: </p>
            <p class="" id="jumbo-topics"></p>
        </div>
        <div class ="col-2 align-bottom friend-request">
            
        </div>


    </div>
    </div>

  <div class="feed-container">
    <div class="feed-text"></div>
    </div>
</div>    
</body>

</html>